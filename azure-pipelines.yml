# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- checkout: self
  fetchDepth: 0
- script: |
    curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b . v$(codeScanTrivyVersion)
    ./trivy fs --security-checks config,vuln,secret .
    # Customizing which severities are scanned for is done by adding the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
  env:
    AQUA_KEY: $(codeScanAquaKey)
    AQUA_SECRET: $(codeScanAquaSecret)
    # AZURE_TOKEN: $(AZURE-TOKEN)
    TRIVY_RUN_AS_PLUGIN: aqua
  displayName: Aqua trivy


- script: |
    export BILLY_SERVER=https://prod-aqua-billy.codesec.aquasec.com
    curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
    curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
    if ! cat install.sh.checksum | sha256sum ; then
    echo "install.sh checksum failed"
    exit 1
    fi
    BINDIR="." sh install.sh
    rm install.sh install.sh.checksum
    ./billy generate \
      --access-token $(System.AccessToken) \
      --aqua-key $(codeScanAquaKey) \
      --aqua-secret $(codeScanAquaSecret) \
      --artifact-path $(System.DefaultWorkingDirectory)
  displayName: Manifest Generation